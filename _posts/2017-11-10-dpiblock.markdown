---
title: dpiblock
date: 2017-11-10 18:58:00 +02:00
---

<div class="text text_html js-mediator-article" id="post_text">Провайдеры Российской Федерации, в большинстве своем, применяют системы глубокого анализа трафика (DPI, Deep Packet Inspection) для блокировки сайтов, внесенных в реестр запрещенных. Не существует единого стандарта на DPI, есть большое количество реализации от разных поставщиков DPI-решений, отличающихся по типу подключения и типу работы.<br>
<br>
Существует два распространенных типа подключения DPI: пассивный и активный.<br>
<br>
<h2>Пассивный DPI</h2>Пассивный DPI — DPI, подключенный в провайдерскую сеть параллельно (не в разрез) либо через пассивный оптический сплиттер, либо с использованием зеркалирования исходящего от пользователей трафика. Такое подключение не замедляет скорость работы сети провайдера в случае недостаточной производительности DPI, из-за чего применяется у крупных провайдеров. DPI с таким типом подключения технически может только выявлять попытку запроса запрещенного контента, но не пресекать ее. Чтобы обойти это ограничение и заблокировать доступ на запрещенный сайт, DPI отправляет пользователю, запрашивающему заблокированный URL, специально сформированный HTTP-пакет с перенаправлением на страницу-заглушку провайдера, словно такой ответ прислал сам запрашиваемый ресурс (подделывается IP-адрес отправителя и TCP sequence). Из-за того, что DPI физически расположен ближе к пользователю, чем запрашиваемый сайт, подделанный ответ доходит до устройства пользователя быстрее, чем настоящий ответ от сайта.<a name="habracut"></a><br>
<br>
<h3>Выявляем и блокируем пакеты пассивного DPI</h3>Поддельные пакеты, формируемые DPI, легко обнаружить анализатором трафика, например, Wireshark.<br>
Пробуем зайти на заблокированный сайт:<br>
<img src="https://habrastorage.org/getpro/habr/post_images/140/ae8/4e2/140ae84e2bc2c6965f2e896ef2cc5bb6.png" alt="Wireshark"><br>
<br>
Мы видим, что сначала приходит пакет от DPI, с HTTP-перенаправлением кодом 302, а затем настоящий ответ от сайта. Ответ от сайта расценивается как ретрансмиссия и отбрасывается операционной системой. Браузер переходит по ссылке, указанной в ответе DPI, и мы видим страницу блокировки.<br>
<br>
Рассмотрим пакет от DPI подробнее:<br>
<img src="https://habrastorage.org/getpro/habr/post_images/a59/be3/5db/a59be35dbd7c16dd386db5079d6beaea.png" alt="image"><br>
<br>
<pre><code>HTTP/1.1 302 Found
Connection: close
Location: http://warning.rt.ru/?id=17&amp;st=0&amp;dt=195.82.146.214&amp;rs=http%3A%2F%2Frutracker.org%2F</code></pre><br>
В ответе DPI не устанавливается флаг «Don't Fragment», и в поле Identification указано 1. Серверы в интернете обычно устанавливают бит «Don't Fragment», и пакеты без этого бита встречаются нечасто. Мы можем использовать это в качестве отличительной особенности пакетов от DPI, вместе с тем фактом, что такие пакеты всегда содержат HTTP-перенаправление кодом 302, и написать правило iptables, блокирующее их:<br>
<pre><code># iptables -A FORWARD -p tcp --sport 80 -m u32 --u32 "0x4=0x10000 &amp;&amp; 0x60=0x7761726e &amp;&amp; 0x64=0x696e672e &amp;&amp; 0x68=0x72742e72" -m comment --comment "Rostelecom HTTP" -j DROP</code></pre><br>
Что это такое? Модуль u32 iptables позволяет выполнять битовые операции и операции сравнения над 4-байтовыми данными в пакете. По смещению 0x4 хранится 2-байтное поле Indentification, сразу за ним идут 1-байтные поля Flags и Fragment Offset.<br>
Начиная со смещения 0x60 расположен домен перенаправления (HTTP-заголовок Location).<br>
Если Identification = 1, Flags = 0, Fragment Offset = 0, 0x60 = «warn», 0x64 = «ing.», 0x68 = «rt.ru», то отбрасываем пакет, и получаем настоящий ответ от сайта.<br>
<br>
В случае с HTTPS-сайтами, DPI присылает TCP Reset-пакет, тоже с Identification = 1 и Flags = 0.<br>
<br>
<h2>Активный DPI</h2>Активный DPI — DPI, подключенный в сеть провайдера привычным образом, как и любое другое сетевое устройство. Провайдер настраивает маршрутизацию так, чтобы DPI получал трафик от пользователей к заблокированным IP-адресам или доменам, а DPI уже принимает решение о пропуске или блокировке трафика. Активный DPI может проверять как исходящий, так и входящий трафик, однако, если провайдер применяет DPI только для блокирования сайтов из реестра, чаще всего его настраивают на проверку только исходящего трафика.<br>
<br>
Системы DPI разработаны таким образом, чтобы обрабатывать трафик с максимально возможной скоростью, исследуя только самые популярные и игнорируя нетипичные запросы, даже если они полностью соответствуют стандарту.<br>
<br>
<h3>Изучаем стандарт HTTP</h3>Типичные HTTP-запросы в упрощенном виде выглядят следующим образом:<br>
<pre><code>GET / HTTP/1.1
Host: habrahabr.ru
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:49.0) Gecko/20100101 Firefox/50.0
Accept-Encoding: gzip, deflate, br
Connection: keep-alive</code></pre><br>
Запрос начинается с HTTP-метода, затем следует один пробел, после него указывается путь, затем еще один пробел, и заканчивается строка протоколом и переносом строки CRLF.<br>
Заголовки начинаются с большой буквы, после двоеточия ставится символ пробела.<br>
<br>
Давайте заглянем в последнюю версию стандарта HTTP/1.1 от 2014 года. Согласно RFC 7230, HTTP-заголовки не зависят от регистра символов, а после двоеточия может стоять произвольное количество пробелов (или не быть их вовсе).<br>
<pre><code>   Each header field consists of a case-insensitive field name followed
   by a colon (":"), optional leading whitespace, the field value, and
   optional trailing whitespace.

     header-field   = field-name ":" OWS field-value OWS

     field-name     = token
     field-value    = *( field-content / obs-fold )
     field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]
     field-vchar    = VCHAR / obs-text

     obs-fold       = CRLF 1*( SP / HTAB )
                    ; obsolete line folding</code></pre><br>
OWS — опциональный один или несколько символов пробела или табуляции, SP — одинарный символ пробела, HTAB — табуляция, CRLF — перенос строки и возврат каретки (\r\n).<br>
<br>
Это значит, что запрос ниже полностью соответствует стандарту, его должны принять многие веб-серверы, придерживающиеся стандарта:<br>
<pre><code>GET / HTTP/1.1
hoSt:habrahabr.ru
user-agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:49.0) Gecko/20100101 Firefox/50.0
Accept-Encoding:           gzip, deflate, br
coNNecTion:	keep-alive      ← здесь символ табуляции между двоеточием и значением</code></pre><br>
На деле же, многие веб-серверы не любят символ табуляции в качестве разделителя, хотя подавляющее большинство серверов нормально обрабатывает и отсутствие пробелов между двоеточием в заголовках, и множество пробелов.<br>
<br>
Старый стандарт, RFC 2616, рекомендует снисходительно парсить запросы и ответы сломанных веб-северов и клиентов, и корректно обрабатывать произвольное количество пробелов в самой первой строке HTTP-запросов и ответов в тех местах, где требуется только один:<br>
<blockquote>Clients SHOULD be tolerant in parsing the Status-Line and servers tolerant when parsing the Request-Line. In particular, they SHOULD accept any amount of SP or HT characters between fields, even though only a single SP is required.</blockquote>Этой рекомендации придерживаются далеко не все веб-серверы. Из-за двух пробелов между методом и путем ломаются некоторые сайты.<br>
<br>
<h3>Спускаемся на уровень TCP</h3>Соединение TCP начинается с SYN-запроса и SYN/ACK-ответа. В запросе клиент, среди прочей информации, указывает размер TCP-окна (TCP Window Size) — количество байт, которые он готов принимать без подтверждения передачи. Сервер тоже указывает это значение. В интернете используется значение MTU 1500, что позволяет отправить до 1460 байтов данных в одном TCP-пакете.<br>
Если сервер указывает размер TCP-окна менее 1460, клиент отправит в первом пакете данных столько, сколько указано в этом параметре.<br>
<br>
Если сервер пришлет TCP Window Size = 2 в SYN/ACK-пакете (или мы его изменим на это значение на стороне клиента), то браузер отправит HTTP-запрос двумя пакетами:<br>
<br>
Пакет 1:<br>
<pre><code>GE</code></pre>Пакет 2:<pre><code>T / HTTP/1.1
Host: habrahabr.ru
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:49.0) Gecko/20100101 Firefox/50.0
Accept-Encoding: gzip, deflate, br
Connection: keep-alive</code></pre><br>
<br>
<h3>Используем особенности HTTP и TCP для обхода активного DPI</h3>Многие решения DPI ожидают заголовки только в стандартном виде.<br>
Для блокировки сайтов по домену или URI, они ищут строку "<b>Host: </b>" в теле запроса. Стоит заменить заголовок «Host» на «hoSt» или убрать пробел после двоеточия, и перед вами открывается запрошенный сайт.<br>
Не все DPI можно обмануть таким простым трюком. DPI некоторых провайдеров корректно анализируют HTTP-заголовки в соответствии со стандартом, но не умеют собирать TCP-поток из нескольких пакетов. Для таких DPI подойдет «фрагментирование» пакета, путем искусственного уменьшения TCP Window Size.<br>
<br>
В настоящий момент, в РФ DPI устанавливают и у конечных провайдеров, и на каналах транзитного трафика. Бывают случаи, когда одним способом можно обойти DPI вашего провайдера, но вы видите заглушку транзитного провайдера. В таких случаях нужно комбинировать все доступные способы.<br>
<br>
<h3>Программа для обхода DPI</h3>Я написал программу для обхода DPI под Windows: <a href="https://github.com/ValdikSS/GoodbyeDPI">GoodbyeDPI</a>.<br>
Она умеет блокировать пакеты с перенаправлением от пассивного DPI, заменять Host на hoSt, удалять пробел между двоеточием и значением хоста в заголовке Host, «фрагментировать» HTTP и HTTPS-пакеты (устанавливать TCP Window Size), и добавлять дополнительный пробел между HTTP-методом и путем.<br>
Преимущество этого метода обхода в том, что он полностью автономный: нет внешних серверов, которые могут заблокировать.<br>
<br>
По умолчанию активированы опции, нацеленные на максимальную совместимость с провайдерами, но не на скорость работы. Запустите программу следующим образом:<br>
<pre><code>goodbyedpi.exe -1 -a</code></pre>Если заблокированные сайты стали открываться, DPI вашего провайдера можно обойти.<br>
Попробуйте запустить программу с параметром <code>-2</code> и зайти на заблокированный HTTPS-сайт. Если все продолжает работать, попробуйте режим <code>-3</code> и <code>-4</code> (наиболее быстрый).<br>
Некоторые провайдеры, например, Мегафон и Yota, не пропускают фрагментированные пакеты по HTTP, и сайты перестают открываться вообще. С такими провайдерами используйте опцию <code>-3 -a</code><br>
<br>
<h2>Эффективное проксирование для обхода блокировок по IP</h2>В случае блокировок по IP-адресу, провайдеры фильтруют только исходящие запросы на IP-адреса из реестра, но не входящие пакеты с этих адресов.<br>
Программа <a href="https://reqrypt.org/reqrypt.html">ReQrypt</a> работает как эффективный прокси-сервер: исходящие от клиента пакеты отправляются на сервер ReQrypt в зашифрованном виде, сервер ReQrypt пересылает их серверу назначения <b>с подменой исходящего IP-адреса на клиентский</b>, сервер назначения отвечает клиенту напрямую, минуя ReQrypt.<br>
<br>
<img src="https://habrastorage.org/getpro/habr/post_images/113/95c/b0b/11395cb0b075eea1b22804a9b669e8c6.png" alt="ReQrypt"><br>
<br>
Если наш компьютер находится за NAT, мы не можем просто отправить запрос на сервер ReQrypt и ожидать ответа от сайта. Ответ не дойдет, т.к. в таблице NAT не создана запись для этого IP-адреса.<br>
Для «пробива» NAT, ReQrypt отправляет первый пакет в TCP-соединении напрямую сайту, но с TTL = 3. Он добавляет запись в NAT-таблицу роутера, но не доходит до сайта назначения.<br>
<br>
Долгое время разработка была заморожена из-за того, что автор не мог найти сервер с возможностью спуфинга. Спуфинг IP-адресов часто используется для амплификации атак через DNS, NNTP и другие протоколы, из-за чего он запрещен у подавляющего большинства провайдеров. Но сервер все-таки был найден, хоть и не самый удачный. Разработка продолжается.<br>
<br>
<h2>Заключение и TL;DR</h2><a href="https://github.com/ValdikSS/GoodbyeDPI">GoodbyeDPI</a> — программа под Windows, позволяющая обходить пассивные и активные DPI. Просто скачайте и запустите ее, и заблокированные сайты станут снова доступны.<br>
Для Linux есть аналогичная программа — <a href="https://github.com/bol-van/zapret">zapret</a>.<br>
<br>
Используйте кроссплатформенную программу <a href="https://reqrypt.org/reqrypt.html">ReQrypt</a>, если ваш провайдер блокирует сайты по IP-адресу.<br>
<br>
Определить тип блокировки сайтов можно программой <a href="https://github.com/ValdikSS/blockcheck">Blockcheck</a>. Если в тестах DPI вы видите, что сайты открываются, или видите строку «обнаружен пассивный DPI», то GoodbyeDPI вам поможет. Если нет, используйте ReQrypt.<br>
<br>
Дополнительная полезная информация есть <a href="https://rutracker.org/forum/viewtopic.php?t=5403670">здесь</a> и <a href="https://rutracker.org/forum/viewtopic.php?t=5126394">здесь</a>.</div>